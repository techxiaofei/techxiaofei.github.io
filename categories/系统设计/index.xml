<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>系统设计 on Leftpocket的个人博客</title>
    <link>https://left-pocket.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link>
    <description>Recent content in 系统设计 on Leftpocket的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Nov 2021 18:00:51 +0800</lastBuildDate><atom:link href="https://left-pocket.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LRU缓存机制，你想知道的这里都有</title>
      <link>https://left-pocket.github.io/post/system_design/lru/</link>
      <pubDate>Tue, 23 Nov 2021 18:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/lru/</guid>
      <description>​​ 原文地址：https://left-pocket.github.io 概述 LRU是Least Recently Used的缩写，译为最近最少使用。它的理论基</description>
    </item>
    
    <item>
      <title>布隆过滤器(Bloom Filter)详解</title>
      <link>https://left-pocket.github.io/post/system_design/bloom_filter/</link>
      <pubDate>Wed, 03 Feb 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/bloom_filter/</guid>
      <description>原文地址：https://left-pocket.github.io 布隆过滤器是什么 本质上布隆过滤器是一种数据结构，比较巧妙的概率型数据结构</description>
    </item>
    
    <item>
      <title>朋友圈技术设计与实现</title>
      <link>https://left-pocket.github.io/post/system_design/friends_status/</link>
      <pubDate>Fri, 22 Jan 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/friends_status/</guid>
      <description>原文地址：https://left-pocket.github.io 背景 最近实现了一个功能，类似于微信的朋友圈，以及点赞评论，我将分两篇介绍</description>
    </item>
    
    <item>
      <title>点赞和评论 技术设计与实现</title>
      <link>https://left-pocket.github.io/post/system_design/friends_comment_like/</link>
      <pubDate>Fri, 22 Jan 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/friends_comment_like/</guid>
      <description>原文地址：https://left-pocket.github.io 上篇文章介绍了朋友圈的技术设计，这篇将介绍朋友圈点赞和评论的实现方式。 需</description>
    </item>
    
    <item>
      <title>分布式ID生成方案-snowflake算法</title>
      <link>https://left-pocket.github.io/post/system_design/snowflake/</link>
      <pubDate>Tue, 24 Nov 2020 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/snowflake/</guid>
      <description>原文地址：https://left-pocket.github.io 背景 在互联网的业务系统中，涉及到各种各样的ID，这些ID需要保证全局唯一</description>
    </item>
    
  </channel>
</rss>
