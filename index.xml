<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leftpocket的个人博客</title>
    <link>https://left-pocket.github.io/</link>
    <description>Recent content on Leftpocket的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Nov 2021 13:00:51 +0800</lastBuildDate><atom:link href="https://left-pocket.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>c&#43;&#43;中static的用法详解</title>
      <link>https://left-pocket.github.io/post/cpp/static/</link>
      <pubDate>Mon, 22 Nov 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/cpp/static/</guid>
      <description>​ 原文地址：https://left-pocket.github.io 背景 static 是 C/C++ 中很常用的修饰符，它被用来控制变量的存储方式和可见性。而 static 在</description>
    </item>
    
    <item>
      <title>手游服务器开发技术详解</title>
      <link>https://left-pocket.github.io/post/game/game_development/</link>
      <pubDate>Sun, 21 Nov 2021 14:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/game/game_development/</guid>
      <description>原文地址：https://left-pocket.github.io 回顾我的码农生涯，在做互联网电商后端开发之前做过大概6年的游戏后端开发，</description>
    </item>
    
    <item>
      <title>二级指针的作用详解</title>
      <link>https://left-pocket.github.io/post/cpp/secondary_pointer/</link>
      <pubDate>Sun, 21 Nov 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/cpp/secondary_pointer/</guid>
      <description>原文地址：https://left-pocket.github.io ​ 一、概念 在如下的A指向B、B指向C的指向关系中： 首先 C是&amp;quot;一</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://left-pocket.github.io/about/</link>
      <pubDate>Sun, 21 Nov 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/about/</guid>
      <description>目前在东南亚最大的电商平台 Shopee 当码农，坐标在 新加坡，主要负责后端开发工作。 个人擅长C++, Golang, 网络编程, Redis, MySQL, TiDB等技术栈。有多年面试官经验，</description>
    </item>
    
    <item>
      <title>git rebase使用详解</title>
      <link>https://left-pocket.github.io/post/git/git_rebase/</link>
      <pubDate>Sat, 20 Nov 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/git/git_rebase/</guid>
      <description>原文地址：https://left-pocket.github.io 背景 刚开始接触git的时候只会一些简单的指令，pull, add, commit, merge, push 等几个基</description>
    </item>
    
    <item>
      <title>goroutine的实现原理</title>
      <link>https://left-pocket.github.io/post/golang/goroutine_implementation/</link>
      <pubDate>Sun, 18 Apr 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/golang/goroutine_implementation/</guid>
      <description>原文地址：https://left-pocket.github.io/ 协程基础知识 1.Goroutine是Go语言的协程（Coroutine</description>
    </item>
    
    <item>
      <title>MySQL死锁的产生</title>
      <link>https://left-pocket.github.io/post/mysql/dead_lock/</link>
      <pubDate>Mon, 05 Apr 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/mysql/dead_lock/</guid>
      <description>原文地址：https://left-pocket.github.io/ 背景 MySQL死锁问题涉及到MySQL一系列的基础知识，比如事务，隔离</description>
    </item>
    
    <item>
      <title>Golang append是并发安全的吗</title>
      <link>https://left-pocket.github.io/post/golang/append/</link>
      <pubDate>Sat, 20 Mar 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/golang/append/</guid>
      <description>原文地址：https://left-pocket.github.io 背景 最近开发的时候写了下面这段类似的代码。 func TestAppend() (result []int) { var wg sync.WaitGroup for i := 0; i &amp;lt; 100;</description>
    </item>
    
    <item>
      <title>Golang函数式选项(Functional Options)编程模式</title>
      <link>https://left-pocket.github.io/post/golang/functional_options/</link>
      <pubDate>Thu, 18 Feb 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/golang/functional_options/</guid>
      <description>原文地址：https://left-pocket.github.io/ 概览 最近阅读源码的时候看到一段不错的代码，但是当时却不是非常理解为什么</description>
    </item>
    
    <item>
      <title>Golang装饰器(Decorator)设计模式</title>
      <link>https://left-pocket.github.io/post/golang/decorator/</link>
      <pubDate>Thu, 18 Feb 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/golang/decorator/</guid>
      <description>原文地址：https://left-pocket.github.io/ 今天我们来介绍decorator这个经典的设计模式。 定义：装饰器模式主</description>
    </item>
    
    <item>
      <title>Redis SDS简单动态字符串</title>
      <link>https://left-pocket.github.io/post/redis/redis_sds/</link>
      <pubDate>Wed, 17 Feb 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/redis/redis_sds/</guid>
      <description>原文地址：https://left-pocket.github.io/ SDS （Simple Dynamic String，简单动态字符串）是 Redis 底层所使用的字符串</description>
    </item>
    
    <item>
      <title>布隆过滤器(Bloom Filter)详解</title>
      <link>https://left-pocket.github.io/post/algorithm/bloom_filter/</link>
      <pubDate>Wed, 03 Feb 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/algorithm/bloom_filter/</guid>
      <description>原文地址：https://left-pocket.github.io 布隆过滤器是什么 本质上布隆过滤器是一种数据结构，比较巧妙的概率型数据结构</description>
    </item>
    
    <item>
      <title>朋友圈技术设计与实现</title>
      <link>https://left-pocket.github.io/post/system_design/friends_status/</link>
      <pubDate>Fri, 22 Jan 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/friends_status/</guid>
      <description>原文地址：https://left-pocket.github.io/ 最近在产品上实现了微信朋友圈的功能，在这里分享一下朋友圈功能的设计与实</description>
    </item>
    
    <item>
      <title>点赞和评论 技术设计与实现</title>
      <link>https://left-pocket.github.io/post/system_design/friends_comment_like/</link>
      <pubDate>Fri, 22 Jan 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/friends_comment_like/</guid>
      <description>原文地址：https://left-pocket.github.io/ 上篇文章介绍了朋友圈的技术设计，这篇将介绍朋友圈点赞和评论的实现方式。</description>
    </item>
    
    <item>
      <title>博客分类</title>
      <link>https://left-pocket.github.io/post/catalog/golang_design_patterns/</link>
      <pubDate>Fri, 01 Jan 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/catalog/golang_design_patterns/</guid>
      <description>Golang 设计模式篇 Functional Options 函数式选项模式 [Decorator 装饰器模式]https://github.com） 系统设计篇</description>
    </item>
    
    <item>
      <title>后端面试必备</title>
      <link>https://left-pocket.github.io/post/interview/</link>
      <pubDate>Fri, 01 Jan 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/interview/</guid>
      <description>一 数据结构与算法 二 C++&amp;amp;C++11 三 Golang 四 Redis 五 MySQL 六 Linux 七 系统设计 秒杀系统设计</description>
    </item>
    
    <item>
      <title>服务端面试技术栈</title>
      <link>https://left-pocket.github.io/post/catalog/interview_tech_stack/</link>
      <pubDate>Fri, 01 Jan 2021 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/catalog/interview_tech_stack/</guid>
      <description>网络编程篇 数据结构与算法篇 Redis篇 MySQL篇 Golang篇 设计模式篇 Kafka篇 C/C++篇 系统设计篇 Linux技术篇</description>
    </item>
    
    <item>
      <title>vscode配置leetcode插件</title>
      <link>https://left-pocket.github.io/post/others/vscode-leetcode/</link>
      <pubDate>Sat, 12 Dec 2020 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/others/vscode-leetcode/</guid>
      <description>原文地址：https://left-pocket.github.io/ 作为一名合格的程序猿，大家找工作的时候经常需要刷leetcode, le</description>
    </item>
    
    <item>
      <title>Redis Zset的精度问题分析及解决方案</title>
      <link>https://left-pocket.github.io/post/redis/redis-zset-score/</link>
      <pubDate>Fri, 04 Dec 2020 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/redis/redis-zset-score/</guid>
      <description>原文地址：https://left-pocket.github.io/ 背景 最近使用Redis的SortedSet，使用int64作为scor</description>
    </item>
    
    <item>
      <title>snowflake算法及最佳实践</title>
      <link>https://left-pocket.github.io/post/system_design/snowflake/</link>
      <pubDate>Tue, 24 Nov 2020 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/snowflake/</guid>
      <description>原文地址：https://left-pocket.github.io/ 背景 这篇文章来讲解snowflake是什么，以及它实际应用的最佳实践方</description>
    </item>
    
    <item>
      <title>分布式ID生成方案</title>
      <link>https://left-pocket.github.io/post/system_design/uid-generator/</link>
      <pubDate>Sat, 21 Nov 2020 00:07:57 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/system_design/uid-generator/</guid>
      <description>原文地址：https://left-pocket.github.io/ 背景 在互联网的业务系统中，涉及到各种各样的ID，这些ID需要保证全局唯</description>
    </item>
    
    <item>
      <title>Centos7安装SSR教程</title>
      <link>https://left-pocket.github.io/post/others/ssr-centos7/</link>
      <pubDate>Thu, 06 Aug 2020 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/others/ssr-centos7/</guid>
      <description>原文地址：https://left-pocket.github.io/ 记录一下在centos7下安装ssr(shadowsocksr)的教程</description>
    </item>
    
    <item>
      <title>TiDB Write Conflict问题分析</title>
      <link>https://left-pocket.github.io/post/mysql/db-tidb-write-conflict/</link>
      <pubDate>Thu, 06 Aug 2020 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/mysql/db-tidb-write-conflict/</guid>
      <description>原文地址：https://left-pocket.github.io/ 背景 我们线上使用TiDB来储存数据，最近DBA报告TiDB发生了wri</description>
    </item>
    
    <item>
      <title>使用hugo搭建个人博客</title>
      <link>https://left-pocket.github.io/post/hugo/hugo-creation/</link>
      <pubDate>Thu, 06 Aug 2020 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/hugo/hugo-creation/</guid>
      <description>原文地址：https://left-pocket.github.io/ 最近使用hugo搭建博客，准备自己记录一下学习过程。 就先记录一下搭建h</description>
    </item>
    
    <item>
      <title>把hugo博客托管到github上</title>
      <link>https://left-pocket.github.io/post/hugo/hugo-github/</link>
      <pubDate>Thu, 06 Aug 2020 13:00:51 +0800</pubDate>
      
      <guid>https://left-pocket.github.io/post/hugo/hugo-github/</guid>
      <description>原文地址：https://left-pocket.github.io/ 上一篇介绍了怎么在本机搭建hugo博客，这一篇将主要介绍怎么把hugo</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://left-pocket.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://left-pocket.github.io/archives/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
